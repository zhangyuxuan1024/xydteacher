package net.iclassmate.teacherspace.adapter;

import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.text.Spannable;
import android.text.SpannableString;
import android.text.Spanned;
import android.text.style.ForegroundColorSpan;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import net.iclassmate.teacherspace.R;
import net.iclassmate.teacherspace.bean.Student;
import net.iclassmate.teacherspace.bean.StudentClass;
import net.iclassmate.teacherspace.bean.general.GeneralAll;
import net.iclassmate.teacherspace.bean.general.SingleExamInfos;
import net.iclassmate.teacherspace.bean.single.GradeReport;
import net.iclassmate.teacherspace.ui.activity.GeneralTextActivity;
import net.iclassmate.teacherspace.ui.activity.single.StudentTestActivity;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

/**
 * Created by xydbj on 2016/1/30.
 */
public class FragmentGeneralClassAdapter extends BaseAdapter implements View.OnClickListener {
    private Context context;
    private List<Object> list;
    private boolean flag;
    private GeneralAll generalAll = new GeneralAll();

    public FragmentGeneralClassAdapter(Context context) {
        this.context = context;
        list = new ArrayList<>();
    }

    public FragmentGeneralClassAdapter(Context context, List<Object> list) {
        this.context = context;
        this.list = list;
    }

    public FragmentGeneralClassAdapter(Context context, List<Object> list, GeneralAll generalAll) {
        this.context = context;
        this.list = list;
        this.generalAll = generalAll;
    }

    public void addData(List<Object> data) {
        if (list != null) {
            list.clear();
        }
        if (data != null) {
            list.addAll(data);
        }
    }

    public void setFlag(boolean flag) {
        this.flag = flag;
    }

    public void addData(List<Object> data, boolean flag) {
        if (list != null) {
            list.clear();
        }
        if (data != null) {
            list.addAll(data);
        }
        this.flag = flag;
    }

    @Override
    public int getCount() {
        int ret = 0;
        if (list != null) {
            ret = list.size();
            if (!flag && ret > 10) {
                ret = 11;
            } else if (flag && ret > 10) {
                ret = ret + 1;
            }
        }
        return ret;
    }

    @Override
    public Object getItem(int i) {
        return list.get(i);
    }

    @Override
    public long getItemId(int i) {
        return i;
    }

    @Override
    public int getViewTypeCount() {
        return 2;
    }

    @Override
    public int getItemViewType(int position) {
        int ret = 0;
        if (getCount() < 11) return ret;
        if (getCount() - position == 1) {
            ret = 1;
        } else {
            ret = 0;
        }
        return ret;
    }

    @Override
    public View getView(int i, View view, ViewGroup viewGroup) {
        if (getItemViewType(i) == 0) {
            view = bindView(i, view, viewGroup);
        } else if (getItemViewType(i) == 1) {
            view = bindLastView(i, view, viewGroup);
        }
        setBackColor(i, view);
        return view;
    }

    private View bindLastView(int position, View view, ViewGroup viewGroup) {
        ViewHolderTv holder = null;
        if (view == null) {
            view = LayoutInflater.from(context).inflate(R.layout.fragment_single_listview_more, viewGroup, false);
            holder = new ViewHolderTv();
            holder.iv = (ImageView) view.findViewById(R.id.fragment_single_last_tv);
            view.setTag(holder);
        } else {
            holder = (ViewHolderTv) view.getTag();
        }
        if (flag) {
            holder.iv.setImageResource(R.drawable.fragment_single_last_img_shouqi);
        } else {
            holder.iv.setImageResource(R.drawable.fragment_single_last_img_zhankai);
        }
        return view;
    }

    private View bindView(int position, View view, ViewGroup viewGroup) {
        ViewHolder holder = null;
        if (view == null) {
            view = LayoutInflater.from(context).inflate(R.layout.fragment_single_title, viewGroup, false);
            holder = new ViewHolder();
            holder.tv1 = (TextView) view.findViewById(R.id.fragment_single_tv_1);
            holder.tv2 = (TextView) view.findViewById(R.id.fragment_single_tv_2);
            holder.tv3 = (TextView) view.findViewById(R.id.fragment_single_tv_3);
            holder.tv4 = (TextView) view.findViewById(R.id.fragment_single_tv_4);
            view.setTag(holder);
        } else {
            holder = (ViewHolder) view.getTag();
        }

        Object object = list.get(position);
        if (object instanceof GradeReport) {
            GradeReport gr = (GradeReport) object;
            holder.tv1.setText(gr.getName());
            holder.tv2.setText(gr.getScore());
            holder.tv3.setText(gr.getClassOrder());
            holder.tv4.setText(gr.getRankChange());
            setTextViewColor(position, holder, view);
            setColor(gr.getRankChange(), holder.tv4);
            holder.tv1.setTag(gr);
            holder.tv1.setOnClickListener(this);

            String sId = gr.getsId();
            if (sId != null && !sId.equals("--") && !sId.equals("--") && !sId.equals("null")) {
                holder.tv1.setTextColor(context.getResources().getColor(R.color.s_name));
            }
        }
        return view;
    }

    private void setTextViewColor(int i, ViewHolder holder, View view) {
        holder.tv1.setTextColor(Color.parseColor("#666666"));
        holder.tv2.setTextColor(Color.parseColor("#666666"));
        holder.tv3.setTextColor(Color.parseColor("#666666"));
        holder.tv4.setTextColor(Color.parseColor("#666666"));
        holder.tv1.setTextSize(13);
        holder.tv2.setTextSize(13);
        holder.tv3.setTextSize(13);
        holder.tv4.setTextSize(13);
    }

    private void setColor(String s, TextView tv) {
        if (s.contains("↑")) {
            if (s.contains("(") && s.contains(")")) {
                SpannableString sb = new SpannableString(s);
                int a = s.indexOf("(");
                int b = s.indexOf(")");
                sb.setSpan(new ForegroundColorSpan(context.getResources().getColor(R.color.tv_green)), a + 1, b, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
                tv.setText(sb);
            } else {
                tv.setTextColor(context.getResources().getColor(R.color.tv_green));
            }
        } else if (s.contains("↓")) {
            if (s.contains("(") && s.contains(")")) {
                SpannableString sb = new SpannableString(s);
                int a = s.indexOf("(");
                int b = s.indexOf(")");
                sb.setSpan(new ForegroundColorSpan(context.getResources().getColor(R.color.tv_red)), a + 1, b, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
                tv.setText(sb);
            } else {
                tv.setTextColor(context.getResources().getColor(R.color.tv_red));
            }
        }
    }

    private void setBackColor(int i, View view) {
        if (i % 2 == 0) {
            view.setBackgroundColor(context.getResources().getColor(R.color.white));
        } else {
            view.setBackgroundColor(Color.parseColor("#f8f8f8"));
        }
    }

    class ViewHolder {
        TextView tv1, tv2, tv3, tv4;
    }

    class ViewHolderTv {
        ImageView iv;
    }

    @Override
    public void onClick(View view) {
        Object object = view.getTag();
        if (object != null) {
            if (object instanceof GradeReport) {
                GradeReport gr = (GradeReport) object;
                String sId = gr.getsId();
                if (sId != null && !sId.equals("--") && !sId.equals("--") && !sId.equals("null")) {
                    toActivity(gr.getsId(), gr.getName());
//                    Toast.makeText(context, gr.getName(), Toast.LENGTH_SHORT).show();
                }
            }
        }
    }

    public void toActivity(String id, String name) {
        List<SingleExamInfos> singleExamInfoslist = new ArrayList<SingleExamInfos>();
        int size = generalAll.getList().get(0).getTotalSituation().getSummaryInfo().getSubjectSummarieslist().get(0).getSingleExamInfoslist().size();
        for (int i = 0; i < size; i++) {
            SingleExamInfos singleExamInfos = new SingleExamInfos();
            //科目名称
            singleExamInfos.setCourseName(generalAll.getList().get(0).getTotalSituation().getSummaryInfo().getSubjectSummarieslist().get(0).getSingleExamInfoslist().get(i).getCourseName());
            //科目ID
            singleExamInfos.setCourseId(generalAll.getList().get(0).getTotalSituation().getSummaryInfo().getSubjectSummarieslist().get(0).getSingleExamInfoslist().get(i).getCourseId());
            //meId
            singleExamInfos.setScore(Float.parseFloat(generalAll.getList().get(0).getMeId()));
            //schoolId
            singleExamInfos.setSeFullScore(Integer.parseInt(generalAll.getList().get(0).getSchoolId()));
            singleExamInfoslist.add(singleExamInfos);
        }
        Intent intent = new Intent(context, GeneralTextActivity.class);
        intent.putExtra("id", id);
        intent.putExtra("name", name);
        intent.putExtra("list", (Serializable) singleExamInfoslist);
        Log.i("miss", "======" + singleExamInfoslist.toString());
        context.startActivity(intent);
    }
}
